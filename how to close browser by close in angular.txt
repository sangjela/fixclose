npm init @angular ..... 이건 기본 플젝 생성이라고 보긴 좀 그렇다.
npm new xxxxx .... 약간의 샘플을 포함한, 앵귤러의 라우팅이 빈상태로의 시작을 만들어준다.

why self close code have trouble?
https://stackoverflow.com/questions/71659989/how-i-can-close-browser-window-with-angular

From this article: https://www.thesitewizard.com/javascripts/close-browser-tab-or-window.shtml

On all modern browsers, the web page to be closed must be the first in that window/tab's session history.

And further:

Modern browsers will also resist your attempt to trick them into thinking that an existing window/tab was opened with JavaScript when it was not.



router-outlet -> window.close() work for button 
may be this compo, load page dynamically or lower compo?

make by only add
<button (click)="showHi()">Hi!!!!</button> to html

export class AppComponent { to 
  title = 'fixclose';

  public showHi(): void {
    window.close(); <- this work not for chrome(버전 120.0.6099.225(공식 빌드) (64비트)), edge(버전 120.0.2210.144 (공식 빌드) (64비트)) 
	//라우팅이 된 시점 부터, 최후의 한 탭은 닫지 못한다.
        //크롬이 기본 브라우저로 설정되었을 때, 클릭으로 이동 주소를 열었다면, 그 땐 크롬은 닫을 수 있다. 
	//에지도 같다.

	window.self.close(); 
        //Edge이 기본 브라우저로 설정되었을 때, 클릭으로 이동 주소를 열었다면, 그 땐 크롬은 닫을 수 있다. 
	//크롬도 같다.

	//주소로 열었을 때, 
	//크롬은 닫히지 않는다.
	//에지도 같다.
  }
}

주소만 있는 파일에서 링크로 열린뒤엔, 위의 결과에서 개선점은 없었다.


//그러니까, 어떤 브라우저별로 닫고 안닫히는게 아니라, 그냥 구멍인 것이다. 포워드 백워드 하고 지우는 것도 가능 할 듯.
// 히스토리로 밀고, 거기서 닫히게 한다면 표준 적으로 닫힐 듯도 한데?

------------------------ 2번째 스텝 --------------------
https://www.angular.kr/guide/router

const routes: Routes = [
  { path: 'first-component', component: FirstComponent }, //for initial close test
  { path: 'second-component', component: SecondComponent },
  { path: '**', component: PageNotFoundComponent },  // Wildcard route for a 404 page
];

test route
/
/first-component (for normal close)

ng generate component first
PS C:\dev\angular\fixclose> ng generate component first
CREATE src/app/first/first.component.html (21 bytes)
CREATE src/app/first/first.component.spec.ts (612 bytes)
CREATE src/app/first/first.component.ts (242 bytes)
CREATE src/app/first/first.component.css (0 bytes)

[Window Title]
Visual Studio Code

[Content]
Make sure you configure your "user.name" and "user.email" in git.
git config --global user.name "Woo Sangje"
git config --global user.email "sangjela@gmail.com"

[Open Git Log] [Learn More] [Cancel]

published to https://github.com/sangjela/fixclose

second step, edge fail to close. chrome success.
edge error, is [Scripts may close only the windows that were opened by them.]


 https://webukatu.com/wordpress/blog/16448/
window.closeは　
wondow.close()で、現在開かれているwindowを閉じることができます。
ただし、原則としてwindow.open()によって開かれたwebページしか閉じることができないので、ご注意を。

一般に、open('about:blank', '_self').close();    //一度再表示してからClose
※現（step 2)に、 routeの導入後は、window.closeでは効かなくなった状態で、上記を試す。`

push to close는 먹지 않는다.


------------------ 스텝3 ----------------------
outer javascript for this project for forceClose. 
https://medium.com/@Codeible/adding-loading-and-using-javascript-in-angular-3281ea4b056b

공통화한, open('about:blank', '_self').close();    //一度再表示してからClose

결론
routing 되지 않은 open 위치라면, window.close로도 에지, 크롬 둘다 가능하다. -> 스텝1에서 확인 가능.
소스를 분리하면, 라우팅 상태에서도 작동한다. => 에지 닫힘, 크롬 빈화면
정확한 동작의 근거는 제공되지 않는다. 다만, 동작으로 확인은 가능했다.
기본적으로는, ただし、原則としてwindow.open()によって開かれたwebページしか閉じることができないので、ご注意を。
이동후 닫기의 인정은 브라우저별로 다른 듯. >> 이제 엣지도 크롬 엔진이라 차이를 알기 힘든 듯.

주소만 있는 파일에서 링크로 열린뒤엔, 양쪽다 루트 닫기에서 about이 남았다.
주소만 기입으로 열린뒤엔, 양쪽다 루트 닫기에서 about이 남았다.
클릭 열기에선, 기본브라우저일 땐 둘다 닫혔다.
프라이빗 + 주소 넣기에선 양쪽다 루트 닫기에서 about이 남았다.

기본브라우저로 열 때만 안정적으로 닫히는데...

ng serve --open 으로 시스템 기본 브라우저에서 열도록하면,
열린 곳에서는 닫힌다. 브라우저는 관계없다.

주소만 기입으로 열린뒤엔, 양쪽다 루트 닫기에서 about이 남았다.

엣지의 ua = 
UA =  Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0
크롬
UA =  Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36

내부적으로는 크롬도 엣지도 이제 거의 같은 시스템으로 동작한다고 본다.
https://www.browserstack.com/guide/edge-vs-chrome
크롬 엔진을 쓴 엣지 브라우저는 많은 부분에서 같은 동작을 한다고 생각된다.

그나마  키워드로 구별을 한다면...
Internet Explorer 11.0
Mozilla	MozillaProductSlice. Claims to be a Mozilla based user agent, which is only true for Gecko browsers like Firefox and Netscape. For all other user agents it means 'Mozilla-compatible'. In modern browsers, this is only used for historical reasons. It has no real meaning anymore

★★★★★　**** User Agent를 보고 IE성격이 있는가 크롬인가를 볼 필요가 있다.
움직임을 맞춘다면, IE / Edg/ / Chrome 을 체크하고 크롬이면 종료 페이지, 아니면. 닫아봐야할 듯.

집에서의 움직임은 결국 엣지가 크롬과 같았다고 보인다.
★★★★★　*

https://www.microsoft.com/en-us/download/details.aspx?id=41628

★★★★★　*IE 11에서와 Edge에서의 에이전트 차이, 현장의 상태를 확인해야 할 듯.


https://bard.google.com/chat/b2d17b5b1a3f9891
ie와 chrome에서 self의 역할이 조금 다르다.
// IE 11
var windowSelf = window.self;
console.log(windowSelf === window); // true

// Chrome
var windowSelf = window.self;
var windowParent = window.parent;
console.log(windowSelf === windowParent); // false

